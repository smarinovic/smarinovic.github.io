[ { "title": "Vulnserver KSTET buffer overflow", "url": "/posts/Vulnserver-KSTET-procmon/", "categories": "Blogging, Tutorial, Exploit, EIP", "tags": "fuzzing, shellcoding, exploit, bufferoverflow, bof, EIP", "date": "2020-08-08 19:00:00 +0200", "snippet": "## Introduction ##Vulnserver is excellent tool for learning and exploring buffer overflow vulnerability. It can be downloaded for free from following url: https://github.com/stephenbradshaw/vulnserver.Vulnserver is by default listening on port 9999. Once connected to application (with netcat or s..." }, { "title": "KarajaSoft Sami FTP 2.0.2 buffer overflow exploit", "url": "/posts/KarajaSoft-Sami-2.0.2-FTP-BoF/", "categories": "Blogging, Tutorial, Exploit, SEH", "tags": "fuzzing, shellcoding, exploit, bufferoverflow, bof, SEH", "date": "2020-08-01 00:00:00 +0200", "snippet": "IntroductionIn this blog post we will go thru finding vulnerability in KarajaSoft Sami FTP 2.0.2 application and (re)writing exploit. Finding vulnerability in this application is a bit tricky without looking at existing exploits as it requires user interaction to actually trigger vulnerability an..." }, { "title": "BigAnt server 2.52 buffer overflow exploit", "url": "/posts/BigAnt-server-BoF/", "categories": "Blogging, Tutorial, Exploit, SEH", "tags": "fuzzing, shellcoding, exploit, bufferoverflow, bof, SEH", "date": "2020-07-24 00:00:00 +0200", "snippet": "IntroductionBigAnt is client/server application which provides enterprise instant messaging solution. Buffer overflow vulnerability (SEH overwrite) was discovered in version 2.52 back in 2010 (or even earlier). Application can still be downloaded from vendor’s webpage: Server: https://www.bigant..." }, { "title": "Savant 3.1 webserver buffer overflow exploit", "url": "/posts/Savant-web-server-BoF/", "categories": "Blogging, Tutorial, Exploit", "tags": "fuzzing, shellcoding, exploit, bufferoverflow, bof", "date": "2020-07-13 17:00:00 +0200", "snippet": "IntroductionNext in a series of recreating (rewriting) remote buffer overflow exploits is Savant 3.1. Based on description from SourceForge: Savant is a freeware open source web server that runs on Windows 9x, ME, NT, 2000, and XP turning any desktop computer into a powerful web server. Applicati..." }, { "title": "MinaliC 2.0.0 buffer overflow exploit", "url": "/posts/MinaliC-webserver-BoF/", "categories": "Blogging, Tutorial, Exploit", "tags": "fuzzing, shellcoding, exploit, bufferoverflow, bof", "date": "2020-07-13 17:00:00 +0200", "snippet": "IntroductionIn this blog post we will go thru recreating buffer overflow exploit for MinaliC webserver. Application can be downloaded on following URL: https://sourceforge.net/projects/minalic/.Resources needed: Windows XP with debugger: Immunity Debugger or OllyDbg Kali Linux or any other OS w..." }, { "title": "MiniShare 1.4.1 webserver buffer overflow exploit", "url": "/posts/MiniShare-webserver-BoF/", "categories": "Blogging, Tutorial, Exploit", "tags": "fuzzing, shellcoding, exploit, bufferoverflow, bof", "date": "2020-07-12 17:00:00 +0200", "snippet": "IntroductionMiniShare is a minimal web server with a simple GUI meant for fast and simple file sharing. It was released back in a days of Windows XP. Application has a buffer overflow vulnerability which is easy to detect and exploit. That feature makes it a great candidate for OSCP BoF practice..." }, { "title": "Custom Encoder", "url": "/posts/Custom-Encoder/", "categories": "Blogging, Tutorial", "tags": "slae, shellcoding, encoder, decoder", "date": "2020-06-10 16:00:00 +0200", "snippet": "IntroductionSending well known shell code to target machine would most probably be detected by antimalware solution . One way to bypass antimalware detection is to encode shell code and to have higher chances for successful bypass, custom encoder should be created and used.In this blog post we wi..." }, { "title": "Egg Hunter", "url": "/posts/EggHunter/", "categories": "Blogging, Tutorial", "tags": "slae, shellcoding, egghunter", "date": "2020-06-09 16:00:00 +0200", "snippet": "IntroductionEgg Hunter is super useful and simple piece of code used to search for an defined series of bytes called “egg” in a memory. Egg as such is just a 4 bytes string, usually: “w00t” (but it can be anything else unique) which is added twice as prefix to a shellcode and thus marks beginning..." }, { "title": "Linux reverse shell in assembly", "url": "/posts/Reverse-shell/", "categories": "Blogging, Tutorial", "tags": "slae, shellcoding", "date": "2020-05-27 17:00:00 +0200", "snippet": "IntroductionObjective of this blog post is to explain process of creating reverse shell in assembly language for 32 bit Linux. Blog post was created for the SLAE certification exam and it describes process of creating both: reverse shell and wrapper script which allows easy modification of IP add..." }, { "title": "Linux bind shell in assembly", "url": "/posts/Bind-shell/", "categories": "Blogging, Tutorial", "tags": "slae, shellcoding", "date": "2020-05-23 01:00:00 +0200", "snippet": "IntroductionObjective of this blog post is to explain process of creating bind shell in assembly language for 32 bit Linux. Blog post was created for the SLAE certification exam and it describes process of creating both: bind shell and wrapper script which allows easy modification of bind shell’s..." } ]
