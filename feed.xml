<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://smarinovic.github.io</id><title></title><subtitle>HackTheBox writeups, exploit development tutorials, OSCP, OSCE, CTP resources</subtitle> <updated>2020-07-24T12:41:11+02:00</updated> <author> <name>Stipe Marinovic</name> <uri>https://smarinovic.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://smarinovic.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator> <rights> Â© 2020 Stipe Marinovic </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>BigAnt server 2.5.2 buffer overflow exploit</title><link href="https://smarinovic.github.io/posts/BigAnd-server-BoF/" rel="alternate" type="text/html" title="BigAnt server 2.5.2 buffer overflow exploit" /><published>2020-07-24T00:00:00+02:00</published> <updated>2020-07-24T12:41:11+02:00</updated> <id>https://smarinovic.github.io/posts/BigAnd-server-BoF/</id> <content src="https://smarinovic.github.io/posts/BigAnd-server-BoF/" /> <author> <name>Stipe Marinovic</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <category term="Exploit" /> <category term="SEH" /> <summary>Introduction BigAnt is client/server application which provides enterprise instant messaging solution. Buffer overflow vulnerability (SEH overwrite) was discovered in version 2.52 back in 2010 (or...</summary> </entry> <entry><title>Savant 3.1 webserver buffer overflow exploit</title><link href="https://smarinovic.github.io/posts/Savant-web-server-BoF/" rel="alternate" type="text/html" title="Savant 3.1 webserver buffer overflow exploit" /><published>2020-07-13T17:00:00+02:00</published> <updated>2020-07-24T12:41:11+02:00</updated> <id>https://smarinovic.github.io/posts/Savant-web-server-BoF/</id> <content src="https://smarinovic.github.io/posts/Savant-web-server-BoF/" /> <author> <name>Stipe Marinovic</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <category term="Exploit" /> <summary>Introduction Next in a series of recreating (rewriting) remote buffer overflow exploits is Savant 3.1. Based on description from SourceForge: Savant is a freeware open source web server that runs...</summary> </entry> <entry><title>MinaliC 2.0.0 buffer overflow exploit</title><link href="https://smarinovic.github.io/posts/MinaliC-webserver-BoF/" rel="alternate" type="text/html" title="MinaliC 2.0.0 buffer overflow exploit" /><published>2020-07-13T17:00:00+02:00</published> <updated>2020-07-24T12:41:11+02:00</updated> <id>https://smarinovic.github.io/posts/MinaliC-webserver-BoF/</id> <content src="https://smarinovic.github.io/posts/MinaliC-webserver-BoF/" /> <author> <name>Stipe Marinovic</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <category term="Exploit" /> <summary>Introduction In this blog post we will go thru recreating buffer overflow exploit for MinaliC webserver. Application can be downloaded on following URL: https://sourceforge.net/projects/minalic/. ...</summary> </entry> <entry><title>MiniShare 1.4.1 webserver buffer overflow exploit</title><link href="https://smarinovic.github.io/posts/MiniShare-webserver-BoF/" rel="alternate" type="text/html" title="MiniShare 1.4.1 webserver buffer overflow exploit" /><published>2020-07-12T17:00:00+02:00</published> <updated>2020-07-24T12:41:11+02:00</updated> <id>https://smarinovic.github.io/posts/MiniShare-webserver-BoF/</id> <content src="https://smarinovic.github.io/posts/MiniShare-webserver-BoF/" /> <author> <name>Stipe Marinovic</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <category term="Exploit" /> <summary>Introduction MiniShare is a minimal web server with a simple GUI meant for fast and simple file sharing. It was released back in a days of Windows XP. Application has a buffer overflow vulnerabili...</summary> </entry> <entry><title>Custom Encoder</title><link href="https://smarinovic.github.io/posts/Custom-Encoder/" rel="alternate" type="text/html" title="Custom Encoder" /><published>2020-06-10T16:00:00+02:00</published> <updated>2020-07-24T12:41:11+02:00</updated> <id>https://smarinovic.github.io/posts/Custom-Encoder/</id> <content src="https://smarinovic.github.io/posts/Custom-Encoder/" /> <author> <name>Stipe Marinovic</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary>Introduction Sending well known shell code to target machine would most probably be detected by antimalware solution . One way to bypass antimalware detection is to encode shell code and to have ...</summary> </entry> </feed>
